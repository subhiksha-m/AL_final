{"version":3,"sources":["components/timer.js","components/swipescreen.js","tutorial-images/moon.jpg","tutorial-images/flag.jpg","tutorial-images/earthrise.jpg","tutorial-images/astronaut.jpg","components/tutorialscreen.js","components/endscreen.js","runner.js","reportWebVitals.js","index.js"],"names":["Timer","props","useState","time","setTime","setTimeout","useEffect","document","cookie","SwipeScreen","onSwipe","direction","setState","loading","onAcceptClick","onRejectClick","onSkipClick","onKeyPress","event","key","state","batchTotal","batch_size","decideCountText","bind","addEventListener","this","removeEventListener","y","imagesLeft","noOfSwipes","batchStop","some","toMatchItem","navigator","userAgent","match","detectMob","preventSwipe","src","image","alt","options","centerContent","defaultPositionX","count_text","x","obj","decideImgRender","Clipboard","console","log","className","labeledSize","intent","onClick","onQuitClick","small","icon","iconSize","id","data-clipboard-target","data-clipboard-text","window","location","href","alert","value","type","disabled","undoHappened","onBackClick","React","Component","TutorialScreen","onTutorialKeyPress","onTutorialAcceptClick","onTutorialRejectClick","onTutorialSkipClick","prevLabel","tutorialIndex","tutorialImages","moon","earthrise","flag","tutorialMessages","title","caption","onTutorialSwipe","length","end","message","style","backgroundImage","EndScreen","decideContinue","fetch","method","headers","body","JSON","stringify","ready_to_end","decodeURIComponent","split","forEach","item","trim","startsWith","continue","text","reload","astronaut","getSwipeTime","sendEnd","App","view","index","total_batch_size","imgUrls","undoUrls","swipes","leftBehind","fetchImage","sendSelection","endTutorial","setLoading","getBatchSize","performance","navigation","image_url","sessionStorage","getItem","curr_image_url","axios","post","then","res","catch","err","parseInt","getTotalBatchSize","setItem","get","data","batch_stop","labeled_size","url","pop","push","s","images","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.12a4801f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Timer(props) {\r\n  const [time, setTime] = useState(1);\r\n  setTimeout(() => setTime(time + 1), 1000);\r\n\r\n  useEffect(() => {\r\n    return function ending() {\r\n      document.cookie = \"swipeTime=\" + time;\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <strong>{time}</strong>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../styles.css\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport Timer from \"./timer\";\r\nimport { Button, ProgressBar, Icon } from \"@blueprintjs/core\";\r\nimport \"normalize.css\";\r\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport Clipboard from \"clipboard\";\r\n\r\nclass SwipeScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      batchTotal: this.props.batch_size,\r\n    };\r\n\r\n    //bind functions\r\n    this.decideCountText = this.decideCountText.bind(this);\r\n    this.onSwipe = this.onSwipe.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.addEventListener(\"keyup\", this.onKeyPress, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Removes the key press event listener if this component is replaced by another component or view.\r\n    // (Currently there are no other components to replace this view, however.)\r\n    document.removeEventListener(\"keyup\", this.onKeyPress);\r\n  }\r\n\r\n  onSwipe = (direction) => {\r\n    // From TinderCard\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    if (direction === \"right\") {\r\n      this.props.onAcceptClick();\r\n    } else if (direction === \"left\") {\r\n      this.props.onRejectClick();\r\n    } else if (direction === \"down\") {\r\n      this.props.onSkipClick();\r\n    }\r\n  };\r\n\r\n  onKeyPress = (event) => {\r\n    // Key press alternatives\r\n    if (event.key === \"ArrowRight\") {\r\n      this.props.onAcceptClick();\r\n    } else if (event.key === \"ArrowLeft\") {\r\n      this.props.onRejectClick();\r\n    } else if (event.key === \"ArrowDown\") {\r\n      this.props.onSkipClick();\r\n    }\r\n  };\r\n\r\n  decideCountText() {\r\n    //Helper function to render progress of correct width on the progress bar\r\n\r\n    let text = \"\";\r\n\r\n    let y;\r\n\r\n    y = this.props.imagesLeft;\r\n\r\n    if (this.props.imagesLeft > this.props.batch_size) {\r\n      y = this.props.batch_size;\r\n    }\r\n    if (y == 0) {\r\n      text = \"Last Image!\";\r\n      return [text, this.props.noOfSwipes / this.props.batchStop];\r\n    }\r\n    if (y !== 1) text = y + \" Images Left!\";\r\n    else text = y + \" Image Left!\";\r\n    return [text, this.props.noOfSwipes / this.props.batchStop];\r\n  }\r\n\r\n  detectMob() {\r\n    // helper function to check type of device(mobile/desktop)\r\n    const toMatch = [\r\n      /Android/i,\r\n      /webOS/i,\r\n      /iPhone/i,\r\n      /iPad/i,\r\n      /iPod/i,\r\n      /BlackBerry/i,\r\n      /Windows Phone/i,\r\n    ];\r\n\r\n    return toMatch.some((toMatchItem) => {\r\n      return navigator.userAgent.match(toMatchItem);\r\n    });\r\n  }\r\n\r\n  decideImgRender() {\r\n    let obj;\r\n    if (this.detectMob()) {\r\n      obj = (\r\n        <TinderCard\r\n          onSwipe={this.onSwipe}\r\n          preventSwipe={[\"right\", \"left\", \"down\", \"up\"]}\r\n        >\r\n          <img src={this.props.image} alt=\"\" />\r\n        </TinderCard>\r\n      );\r\n    } else {\r\n      obj = (\r\n        <TinderCard\r\n          onSwipe={this.onSwipe}\r\n          preventSwipe={[\"right\", \"left\", \"down\", \"up\"]}\r\n        >\r\n          <TransformWrapper\r\n            options={{ centerContent: true }}\r\n            defaultPositionX={50}\r\n          >\r\n            <TransformComponent>\r\n              <img src={this.props.image} alt=\"\" />\r\n            </TransformComponent>\r\n          </TransformWrapper>\r\n        </TinderCard>\r\n      );\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  render() {\r\n    let [count_text, x] = this.decideCountText();\r\n    let obj = this.decideImgRender();\r\n    var clipboard = new Clipboard(\".clipboard\");\r\n    return (\r\n      <>\r\n        {console.log(\"swipscreen props= \", this.props)}\r\n        <div className=\"header\">\r\n          <div className=\"count\">\r\n            <div className=\"timer\">\r\n              <Timer />\r\n            </div>\r\n            <div className=\"ct-grp\">\r\n              <span>\r\n                Labeled {this.props.labeledSize} out of{\" \"}\r\n                {this.props.batch_size + this.props.labeledSize + 1}\r\n              </span>\r\n              <br></br>\r\n              <span>{count_text}</span>\r\n              {console.log(\"x= \", x)}\r\n              <br></br>\r\n            </div>\r\n            <div className=\"button-grp\">\r\n              <Button\r\n                className=\"quit-button\"\r\n                intent=\"danger\"\r\n                onClick={this.props.onQuitClick}\r\n                small={true}\r\n              >\r\n                <Icon icon=\"cross\" iconSize={20} intent=\"danger\" />{\" \"}\r\n              </Button>\r\n              <Button\r\n                id=\"share-button\"\r\n                className=\"clipboard\"\r\n                data-clipboard-target=\"#blank\"\r\n                data-clipboard-text={window.location.href}\r\n                intent=\"primary\"\r\n                small={true}\r\n                onClick={() => alert(\"Link copied to clipboard!\")}\r\n              >\r\n                <Icon icon=\"share\" iconSize={20} />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"#SwipeScreen\" className=\"Content\">\r\n          <div className=\"Image_wrapper\">\r\n            <div className=\"prog-bar\">\r\n              <ProgressBar intent=\"success\" value={x}></ProgressBar>\r\n            </div>\r\n            {obj}\r\n          </div>\r\n          <div className=\"footer\">\r\n            <input type=\"text\" id=\"blank\" value={window.location.href} />\r\n            <Button\r\n              icon=\"remove\"\r\n              className=\"AcceptRejectButton\"\r\n              intent=\"danger\"\r\n              onClick={this.props.onSkipClick}\r\n            >\r\n              Skip\r\n            </Button>\r\n            <Button\r\n              icon=\"tick\"\r\n              className=\"AcceptRejectButton\"\r\n              intent=\"success\"\r\n              onClick={this.props.onAcceptClick}\r\n            >\r\n              Accept\r\n            </Button>\r\n            <Button\r\n              icon=\"small-cross\"\r\n              className=\"AcceptRejectButton\"\r\n              intent=\"primary\"\r\n              onClick={this.props.onRejectClick}\r\n            >\r\n              Reject\r\n            </Button>\r\n            <Button\r\n              icon=\"undo\"\r\n              disabled={this.props.undoHappened}\r\n              className=\"BackButton\"\r\n              onClick={this.props.onBackClick}\r\n            >\r\n              Undo\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport { SwipeScreen };\r\n","export default __webpack_public_path__ + \"static/media/moon.8ddbc237.jpg\";","export default __webpack_public_path__ + \"static/media/flag.d9b1a692.jpg\";","export default __webpack_public_path__ + \"static/media/earthrise.38b5ac31.jpg\";","export default __webpack_public_path__ + \"static/media/astronaut.0005e707.jpg\";","import React, { useEffect } from \"react\";\r\nimport \"../styles.css\";\r\nimport moon from \"../tutorial-images/moon.jpg\";\r\nimport flag from \"../tutorial-images/flag.jpg\";\r\nimport earthrise from \"../tutorial-images/earthrise.jpg\";\r\nimport astronaut from \"../tutorial-images/astronaut.jpg\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport Timer from \"./timer\";\r\nimport { Button, ProgressBar } from \"@blueprintjs/core\";\r\nimport \"normalize.css\";\r\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\r\n\r\nclass TutorialScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      prevLabel: null,\r\n      tutorialIndex: 0,\r\n      tutorialImages: [moon, earthrise, flag],\r\n      tutorialMessages: [\r\n        {\r\n          title: \"Welcome to the Swipe Labeler tool.\",\r\n          caption:\r\n            'You can label images in three ways. First click \"Accept\", \"Reject\" or \"Skip\" to continue.',\r\n        },\r\n        { caption: \"Now try swiping the image left,right, or downwards!.\" },\r\n        {\r\n          caption:\r\n            \"Now try a keyboard shortcut. Press your arrow left key,arrow right key, or your arrow down key on your keybord.\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.onTutorialAcceptClick = this.onTutorialAcceptClick.bind(this);\r\n    this.onTutorialRejectClick = this.onTutorialRejectClick.bind(this);\r\n    this.onTutorialSkipClick = this.onTutorialSkipClick.bind(this);\r\n    this.onTutorialSwipe = this.onTutorialSwipe.bind(this);\r\n    this.onTutorialKeyPress = this.onTutorialKeyPress.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    // Listens for the keyboard key press events. (Uses \"keyup\" so the button is only pressed once per choice.)\r\n    document.addEventListener(\"keyup\", this.onTutorialKeyPress, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Removes the key press event listener if this component is replaced by another component or view.\r\n    // (Currently there are no other components to replace this view, however.)\r\n    document.removeEventListener(\"keyup\", this.onTutorialKeyPress);\r\n  }\r\n\r\n  onTutorialAcceptClick() {\r\n    // This and onTutorialRejectClick could be one just one function: onTutorialClick.\r\n    // Kept as separate function in case later want to add interaction based on user's choice.\r\n    if (this.state.tutorialIndex === this.state.tutorialImages.length - 1) {\r\n      this.props.end();\r\n    }\r\n    this.setState({\r\n      prevLabel: \"accept\",\r\n      tutorialIndex: this.state.tutorialIndex + 1,\r\n    });\r\n  }\r\n\r\n  onTutorialSkipClick() {\r\n    // This and onTutorialAcceptClick could be one just one function: onTutorialClick.\r\n    // Kept as separate function in case later want to add interaction based on user's choice.\r\n    if (this.state.tutorialIndex === this.state.tutorialImages.length - 1) {\r\n      this.props.end();\r\n    }\r\n    this.setState({\r\n      prevLabel: \"skip\",\r\n      tutorialIndex: this.state.tutorialIndex + 1,\r\n    });\r\n  }\r\n\r\n  onTutorialRejectClick() {\r\n    // This and onTutorialAcceptClick could be one just one function: onTutorialClick.\r\n    // Kept as separate function in case later want to add interaction based on user's choice.\r\n    if (this.state.tutorialIndex === this.state.tutorialImages.length - 1) {\r\n      this.props.end();\r\n    }\r\n    this.setState({\r\n      prevLabel: \"reject\",\r\n      tutorialIndex: this.state.tutorialIndex + 1,\r\n    });\r\n  }\r\n\r\n  onTutorialSwipe(direction) {\r\n    // From TinderCard\r\n    if (direction === \"right\") {\r\n      this.onTutorialAcceptClick();\r\n    } else if (direction === \"left\") {\r\n      this.onTutorialRejectClick();\r\n    } else if (direction === \"down\") {\r\n      this.onTutorialSkipClick();\r\n    }\r\n  }\r\n\r\n  onTutorialKeyPress = (event) => {\r\n    // Key press alternatives\r\n    if (event.key === \"ArrowRight\") {\r\n      this.onTutorialAcceptClick();\r\n    } else if (event.key === \"ArrowLeft\") {\r\n      this.onTutorialRejectClick();\r\n    } else if (event.key === \"ArrowDown\") {\r\n      this.onTutorialSkipClick();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    var message = this.state.tutorialMessages[this.state.tutorialIndex];\r\n    return (\r\n      <div className=\"TutorialScreen\">\r\n        <div className=\"Question\">\r\n          <div className=\"Image_wrapper\">\r\n            <TinderCard\r\n              onSwipe={this.onTutorialSwipe}\r\n              preventSwipe={[\"right\", \"left\", \"down\"]}\r\n            >\r\n              <div\r\n                className=\"TutorialScreen_Question_Image\"\r\n                style={{\r\n                  backgroundImage:\r\n                    \"url('\" +\r\n                    this.state.tutorialImages[this.state.tutorialIndex] +\r\n                    \"')\",\r\n                }}\r\n              >\r\n                <div className=\"TutorialScreen_Question_Image_Text\">\r\n                  <div className=\"TutorialScreen_Question_Image_Text_Title\">\r\n                    {message.title}\r\n                  </div>\r\n                  <div className=\"TutorialScreen_Question_Image_Text_Caption\">\r\n                    {message.caption}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </TinderCard>\r\n          </div>\r\n\r\n          <Button\r\n            icon=\"small-cross\"\r\n            className=\"AcceptRejectButton\"\r\n            intent=\"primary\"\r\n            onClick={this.onTutorialRejectClick}\r\n          >\r\n            Reject\r\n          </Button>\r\n\r\n          <Button\r\n            icon=\"remove\"\r\n            className=\"AcceptRejectButton\"\r\n            intent=\"danger\"\r\n            onClick={this.onTutorialSkipClick}\r\n          >\r\n            Skip\r\n          </Button>\r\n\r\n          <Button\r\n            icon=\"tick\"\r\n            className=\"AcceptRejectButton\"\r\n            intent=\"success\"\r\n            onClick={this.onTutorialAcceptClick}\r\n          >\r\n            Accept\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { TutorialScreen };\r\n","import React from \"react\";\r\nimport \"../styles.css\";\r\nimport astronaut from \"../tutorial-images/astronaut.jpg\";\r\nimport { Button } from \"@blueprintjs/core\";\r\nimport Confetti from \"react-confetti\";\r\nimport \"normalize.css\";\r\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\r\n\r\nclass EndScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    //bind functions\r\n    this.decideContinue = this.decideContinue.bind(this);\r\n  }\r\n  sendEnd() {\r\n    // When the user clicks end,\r\n    // that choice gets sent to flask.\r\n    fetch(\"/end\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        ready_to_end: \"ready\",\r\n      }),\r\n    });\r\n  }\r\n\r\n  getSwipeTime() {\r\n    let time;\r\n    let decoded = decodeURIComponent(document.cookie);\r\n    decoded.split(\";\").forEach((item) => {\r\n      if (item.trim().startsWith(\"swipeTime\")) time = item.trim().split(\"=\")[1];\r\n    });\r\n\r\n    return time;\r\n  }\r\n\r\n  decideContinue() {\r\n    let obj;\r\n    if (this.props.continue)\r\n      obj = (\r\n        <Button\r\n          icon=\"label\"\r\n          className=\"EndScreenButton\"\r\n          intent=\"primary\"\r\n          text={true}\r\n          onClick={() => window.location.reload()}\r\n        >\r\n          Continue Labelling\r\n        </Button>\r\n      );\r\n    else obj = null;\r\n    return obj;\r\n  }\r\n\r\n  render() {\r\n    let obj = this.decideContinue();\r\n    return (\r\n      <>\r\n        <Confetti />\r\n        <div\r\n          className=\"EndScreen\"\r\n          style={{\r\n            backgroundImage: \"url('\" + astronaut + \"')\",\r\n          }}\r\n        >\r\n          <div className=\"EndScreen_Text\">Mission accomplished! Good job!</div>\r\n          <div className=\"EndScreen_Time_Text\">\r\n            Your labelling time: {this.getSwipeTime()} seconds...\r\n          </div>\r\n          <div className=\"endscreen-btn-grp\">\r\n            {obj}\r\n            <Button\r\n              icon=\"stop\"\r\n              className=\"EndScreenButton\"\r\n              intent=\"danger\"\r\n              onClick={this.sendEnd}\r\n            >\r\n              Close\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport { EndScreen };\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { Button } from \"@blueprintjs/core\";\r\nimport { SwipeScreen } from \"./components/swipescreen\";\r\nimport { TutorialScreen } from \"./components/tutorialscreen\";\r\nimport { EndScreen } from \"./components/endscreen\";\r\nimport \"normalize.css\";\r\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\r\nimport axios from \"axios\";\r\n\r\nfunction hasSeenTutorial() {\r\n  // Checks for a cookie on the users computer that will tell the user has already done the tutorial.\r\n  return document.cookie\r\n    .split(\";\")\r\n    .some((item) => item.trim().startsWith(\"hasSeenTutorial=\"));\r\n}\r\n\r\nfunction setTutorialSeen() {\r\n  document.cookie = \"hasSeenTutorial=true\";\r\n}\r\n\r\nexport default class App extends React.Component {\r\n  // Main component\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      view: hasSeenTutorial() ? \"active\" : \"tutorial\",\r\n      index: 0,\r\n      image: null,\r\n      total_batch_size: null,\r\n      batch_size: null,\r\n      imgUrls: [],\r\n      undoUrls: [],\r\n      undoHappened: true,\r\n      swipes: 0,\r\n      noOfSwipes: 0,\r\n      batchStop: 0,\r\n      leftBehind: 0,\r\n      labeledSize: 0,\r\n    };\r\n\r\n    // bind functions\r\n    this.fetchImage = this.fetchImage.bind(this);\r\n    this.sendSelection = this.sendSelection.bind(this);\r\n    this.onAcceptClick = this.onAcceptClick.bind(this);\r\n    this.onRejectClick = this.onRejectClick.bind(this);\r\n    this.onSkipClick = this.onSkipClick.bind(this);\r\n    this.onBackClick = this.onBackClick.bind(this);\r\n    this.onQuitClick = this.onQuitClick.bind(this);\r\n    this.endTutorial = this.endTutorial.bind(this);\r\n    this.setLoading = this.setLoading.bind(this);\r\n    this.getBatchSize = this.getBatchSize.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // When the app loads,get the batch size and 1 image url from flask.\r\n\r\n    //refresh handler - to copy the images back to unlabeled incase user hits refresh\r\n    if (window.performance) {\r\n      if (performance.navigation.type === 1) {\r\n        //Send the current image to unlabeled\r\n        // If undo stack has a url, send that as well to unlabeled\r\n        let image_url = sessionStorage.getItem(\"url\");\r\n        let curr_image_url = sessionStorage.getItem(\"undo-url\");\r\n        if (curr_image_url === image_url) {\r\n          curr_image_url = \"none\";\r\n        }\r\n        console.log(\"Image url: \", image_url);\r\n        console.log(\"Curr_Image url: \", curr_image_url);\r\n\r\n        axios\r\n          .post(\"/refresh\", {\r\n            image_url: image_url,\r\n            curr_image_url: curr_image_url,\r\n          })\r\n          .then((res) => {\r\n            console.log(res);\r\n          })\r\n          .catch((err) => console.log(\"ERROR: \", err));\r\n      }\r\n    }\r\n\r\n    let x = parseInt(sessionStorage.getItem(\"noOfSwipes\"));\r\n    if (!x) x = 0;\r\n    this.setState({\r\n      noOfSwipes: x,\r\n    });\r\n\r\n    this.getTotalBatchSize();\r\n    this.fetchImage();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.view === \"end\") {\r\n      //change session storage before moving to endscreen\r\n      console.log(\"reached end\");\r\n      sessionStorage.setItem(`noOfSwipes`, 0);\r\n    } else {\r\n      // load the current image onto session storage, to be moved later incase user hits refresh\r\n      sessionStorage.setItem(`undo-url`, this.state.curr_image_url);\r\n      sessionStorage.setItem(`url`, this.state.image);\r\n      sessionStorage.setItem(`noOfSwipes`, this.state.noOfSwipes);\r\n    }\r\n  }\r\n\r\n  getTotalBatchSize() {\r\n    axios\r\n      .get(\"/getsize\")\r\n      .then((res) => {\r\n        console.log(\"response = \", res.data.batch_size);\r\n        this.setState(\r\n          {\r\n            total_batch_size: res.data.batch_size,\r\n            batchStop: res.data.batch_stop,\r\n            imagesLeft: res.data.batch_stop - 1,\r\n          },\r\n          () => {\r\n            console.log(\"got total batch state as: \", this.state.batch_size);\r\n          }\r\n        );\r\n      })\r\n      .catch((err) => console.log(\"ERROR: \", err));\r\n  }\r\n\r\n  getBatchSize() {\r\n    axios\r\n      .get(\"/getsize\")\r\n      .then((res) => {\r\n        console.log(\"response = \", res.data.batch_size);\r\n        this.setState(\r\n          {\r\n            batch_size: res.data.batch_size,\r\n            labeledSize: res.data.labeled_size,\r\n          },\r\n          () => {\r\n            console.log(\"got total batch state as: \", this.state.batch_size);\r\n          }\r\n        );\r\n      })\r\n      .catch((err) => console.log(\"ERROR: \", err));\r\n  }\r\n\r\n  fetchImage() {\r\n    // Collect one image url from flask\r\n    let url;\r\n    if (this.state.leftBehind !== 0) {\r\n      url = this.state.undoUrls.pop();\r\n      this.setState({\r\n        leftBehind: this.state.leftBehind - 1,\r\n      });\r\n    } else url = \"none\";\r\n    axios\r\n      .post(\"/image\", {\r\n        swipes: this.state.swipes + 1,\r\n        image_url: url || \"none\",\r\n      })\r\n      .then((res) => {\r\n        if (res.data.image === \"none\")\r\n          this.setState({\r\n            view: \"end\",\r\n          });\r\n        else {\r\n          let x = this.state.imgUrls;\r\n          //check if res.data.image is in x before pushing to x\r\n          x.push(res.data.image);\r\n          let url = this.state.imgUrls[this.state.index]\r\n            ? this.state.imgUrls[this.state.index]\r\n            : \"none\";\r\n          let s = this.state.noOfSwipes + this.state.leftBehind;\r\n          this.setState(\r\n            {\r\n              image: res.data.image,\r\n              imgUrls: x,\r\n              curr_image_url: url,\r\n              swipes: s,\r\n            },\r\n            () => {\r\n              console.log(\"img \", typeof this.state.image);\r\n              this.getBatchSize();\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => console.log(\"ERROR: \", err));\r\n  }\r\n\r\n  setLoading(s) {\r\n    console.log(\"reached \");\r\n    this.setState({\r\n      loading: s,\r\n    });\r\n  }\r\n\r\n  sendSelection(value) {\r\n    // When the user swipes, clicks, or presses a choice (accept or reject),\r\n    // that choice gets sent to flask.\r\n    fetch(\"/submit\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        image_url: this.state.image,\r\n        value: value,\r\n      }),\r\n    });\r\n  }\r\n\r\n  onAcceptClick() {\r\n    // Send the positive label to flask, make call to /image to get the next image from flask\r\n    // and update the index so the next image will show.\r\n    this.setState(\r\n      {\r\n        index: this.state.index + 1,\r\n        noOfSwipes: this.state.noOfSwipes + 1,\r\n        swipes: this.state.noOfSwipes + this.state.leftBehind,\r\n        undoHappened: false,\r\n        imagesLeft: this.state.imagesLeft - 1,\r\n      },\r\n      () => {\r\n        this.sendSelection(1);\r\n        if (this.state.noOfSwipes === this.state.batchStop)\r\n          this.setState({\r\n            view: \"end\",\r\n          });\r\n        else this.fetchImage();\r\n      }\r\n    );\r\n  }\r\n\r\n  onSkipClick() {\r\n    // Send no label to flask, mark as ambigous with constant value 10\r\n    // and update the index so the next image will show.\r\n    this.setState(\r\n      {\r\n        index: this.state.index + 1,\r\n        noOfSwipes: this.state.noOfSwipes + 1,\r\n        swipes: this.state.noOfSwipes + this.state.leftBehind,\r\n        undoHappened: false,\r\n        imagesLeft: this.state.imagesLeft - 1,\r\n      },\r\n      () => {\r\n        this.sendSelection(2);\r\n        if (this.state.noOfSwipes === this.state.batchStop)\r\n          this.setState({\r\n            view: \"end\",\r\n          });\r\n        else this.fetchImage();\r\n      }\r\n    );\r\n  }\r\n\r\n  onRejectClick() {\r\n    // Send the negative label to flask,\r\n    // and update the index so the next image will show.\r\n    this.setState(\r\n      {\r\n        index: this.state.index + 1,\r\n        noOfSwipes: this.state.noOfSwipes + 1,\r\n        swipes: this.state.noOfSwipes + this.state.leftBehind,\r\n        undoHappened: false,\r\n        imagesLeft: this.state.imagesLeft - 1,\r\n      },\r\n      () => {\r\n        this.sendSelection(0);\r\n        if (this.state.noOfSwipes === this.state.batchStop)\r\n          this.setState({\r\n            view: \"end\",\r\n          });\r\n        else this.fetchImage();\r\n      }\r\n    );\r\n  }\r\n\r\n  onBackClick() {\r\n    // add the image which is going to be undone to url stack and request the same image from flask\r\n    let x = this.state.imgUrls;\r\n    let y = this.state.undoUrls;\r\n    x.push(this.state.imgUrls[this.state.index - 1]);\r\n    y.push(this.state.imgUrls[this.state.index]);\r\n    axios\r\n      .post(\"/undo\", {\r\n        image_url: this.state.imgUrls[this.state.index - 1],\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          index: this.state.index + 1,\r\n          image: this.state.imgUrls[this.state.index - 1],\r\n          imgUrls: x,\r\n          undoUrls: y,\r\n          noOfSwipes: this.state.noOfSwipes - 1,\r\n          leftBehind: this.state.leftBehind + 1,\r\n          undoHappened: true,\r\n          imagesLeft: this.state.imagesLeft + 1,\r\n        });\r\n      })\r\n      .catch((err) => console.log(\"ERROR: \", err));\r\n  }\r\n\r\n  onQuitClick() {\r\n    //Send the current image to unlabeled\r\n    // If undo stack has a url, send that as well to unlabeled\r\n    let image_url, curr_image_url;\r\n    if (this.state.undoHappened && this.state.index) {\r\n      image_url = this.state.image;\r\n      curr_image_url = this.state.undoUrls[0];\r\n    } else {\r\n      image_url = this.state.curr_image_url;\r\n      curr_image_url = \"none\";\r\n    }\r\n\r\n    axios\r\n      .post(\"/quit\", {\r\n        image_url: image_url,\r\n        curr_image_url: curr_image_url,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          view: \"end\",\r\n        });\r\n      })\r\n      .catch((err) => console.log(\"ERROR: \", err));\r\n  }\r\n\r\n  endTutorial() {\r\n    this.setState({\r\n      view: \"active\",\r\n    });\r\n    // Set a cookie on the user's browser so they don't see the tutorial again.\r\n    setTutorialSeen();\r\n  }\r\n\r\n  render() {\r\n    var body = null;\r\n    {\r\n      console.log(\"Parent Props\\n\", this.state.images);\r\n    }\r\n\r\n    if (this.state.view === \"tutorial\")\r\n      body = <TutorialScreen end={this.endTutorial} />;\r\n    else if (this.state.view === \"active\")\r\n      body = this.state.image ? (\r\n        <SwipeScreen\r\n          index={this.state.index}\r\n          undoHappened={this.state.undoHappened}\r\n          total_batch_size={this.state.total_batch_size}\r\n          swipes={this.state.swipes}\r\n          batch_size={this.state.batch_size}\r\n          labeledSize={this.state.labeledSize}\r\n          image={this.state.image}\r\n          onAcceptClick={this.onAcceptClick}\r\n          onRejectClick={this.onRejectClick}\r\n          onSkipClick={this.onSkipClick}\r\n          onBackClick={this.onBackClick}\r\n          onQuitClick={this.onQuitClick}\r\n          time={this.state.time}\r\n          batchStop={this.state.batchStop}\r\n          noOfSwipes={this.state.noOfSwipes}\r\n          imagesLeft={this.state.imagesLeft}\r\n        />\r\n      ) : (\r\n        <Button loading={true} />\r\n      );\r\n    else if (this.state.view === \"end\") {\r\n      if (this.state.batch_size <= 0) body = <EndScreen />;\r\n      else body = <EndScreen continue={true} />;\r\n    }\r\n    return <div className=\"App\">{body}</div>;\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import App from './App';\r\nimport App from './runner';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}